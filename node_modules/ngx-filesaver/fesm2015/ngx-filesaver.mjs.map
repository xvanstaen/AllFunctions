{"version":3,"file":"ngx-filesaver.mjs","sources":["../../lib/src/filesaver.service.ts","../../lib/src/filesaver.directive.ts","../../lib/src/filesaver.module.ts","../../lib/ngx-filesaver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { saveAs, FileSaverOptions } from 'file-saver';\n\n/** Check the `Blob` existance only once. */\nlet isFileSaverSupported: boolean;\ntry {\n  isFileSaverSupported = !!new Blob();\n} catch {\n  isFileSaverSupported = false;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FileSaverService {\n  get isFileSaverSupported(): boolean {\n    return isFileSaverSupported;\n  }\n\n  genType(fileName?: string): string {\n    if (!fileName || fileName.lastIndexOf('.') === -1) {\n      return 'text/plain';\n    }\n    const type = fileName.substring(fileName.lastIndexOf('.') + 1);\n    switch (type) {\n      case 'txt':\n        return 'text/plain';\n      case 'xml':\n      case 'html':\n        return `text/${type}`;\n      case 'json':\n        return 'octet/stream';\n      default:\n        return `application/${type}`;\n    }\n  }\n\n  save(blob: Blob | null, fileName?: string, filtType?: string, option?: FileSaverOptions): void {\n    if (!blob) {\n      throw new Error('Data argument should be a blob instance');\n    }\n\n    const file = new Blob([blob], { type: filtType || blob.type || this.genType(fileName) });\n    saveAs(file, decodeURI(fileName || 'download'), option);\n  }\n\n  saveText(txt: string, fileName?: string, option?: FileSaverOptions): void {\n    const blob = new Blob([txt]);\n    this.save(blob, fileName, undefined, option);\n  }\n}\n","import { Directive, ElementRef, Input, EventEmitter, Output, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { filter, fromEvent, Observable, Subject, takeUntil } from 'rxjs';\nimport { FileSaverOptions } from 'file-saver';\nimport { FileSaverService } from './filesaver.service';\n\n@Directive({\n  selector: '[fileSaver]',\n  exportAs: 'fileSaver',\n  standalone: true,\n})\nexport class FileSaverDirective implements OnInit, OnDestroy {\n  @Input() method = 'GET';\n  @Input() http?: Observable<HttpResponse<Blob>>;\n  @Input() query: any;\n  @Input() header: any;\n  @Input() url!: string;\n  @Input() fileName?: string;\n  @Input() fsOptions?: FileSaverOptions;\n  @Output() readonly success = new EventEmitter<HttpResponse<Blob>>();\n  @Output() readonly error = new EventEmitter<any>();\n\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private ngZone: NgZone,\n    private el: ElementRef<HTMLButtonElement>,\n    private fss: FileSaverService,\n    private httpClient: HttpClient,\n  ) {\n    if (!fss.isFileSaverSupported) {\n      el.nativeElement.classList.add(`filesaver__not-support`);\n    }\n  }\n\n  ngOnInit(): void {\n    this.ngZone.runOutsideAngular(() => this.setupClickListener());\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private getName(res: HttpResponse<Blob>) {\n    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename') || '');\n  }\n\n  setDisabled(status: boolean): void {\n    const el = this.el.nativeElement;\n    el.disabled = status;\n    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);\n  }\n\n  private setupClickListener(): void {\n    fromEvent(this.el.nativeElement, 'click')\n      .pipe(\n        filter(() => this.fss.isFileSaverSupported),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(() => {\n        let req = this.http;\n\n        if (!req) {\n          let params = new HttpParams();\n          const query = this.query || {};\n          for (const item in query) {\n            params = params.set(item, query[item]);\n          }\n\n          req = this.httpClient.request(this.method, this.url, {\n            observe: 'response',\n            responseType: 'blob',\n            headers: this.header,\n            params,\n          });\n        }\n\n        this.setDisabled(true);\n\n        req.pipe(takeUntil(this.destroy$)).subscribe({\n          next: (response) => {\n            if (response.status !== 200 || response.body!.size <= 0) {\n              this.emitIfHasObservers(this.error, response);\n              return;\n            }\n            this.fss.save(response.body, this.getName(response), undefined, this.fsOptions);\n            this.emitIfHasObservers(this.success, response);\n          },\n          error: (error) => this.emitIfHasObservers(this.error, error),\n          complete: () => this.setDisabled(false),\n        });\n      });\n  }\n\n  private emitIfHasObservers<T>(emitter: EventEmitter<T>, value: T): void {\n    if (hasObservers(emitter)) {\n      // Re-enter the Angular zone only if there're any `error` or `success` listeners\n      // on the directive, for instance, `(success)=\"...\"`.\n      this.ngZone.run(() => emitter.emit(value));\n    }\n  }\n}\n\nfunction hasObservers<T>(subject: Subject<T>): boolean {\n  // Note: The `observed` property is available only in RxJS@7.2.0, which means it's\n  // not available for users running the lower version.\n  return subject.observed ?? subject.observers.length > 0;\n}\n","import { NgModule } from '@angular/core';\nimport { FileSaverDirective } from './filesaver.directive';\n\n@NgModule({\n  imports: [FileSaverDirective],\n  exports: [FileSaverDirective],\n})\nexport class FileSaverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.FileSaverService"],"mappings":"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"}